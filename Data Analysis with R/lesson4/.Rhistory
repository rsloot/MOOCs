setwd("C:/Users/Ryan/Desktop/MOOCs/Data Analysis with R/lesson4")
library(ggplot2)
pf = read.csv('../lesson3/pseudo_facebook.tsv',
sep='\t')
library(dplyr)
pf.fc_by_age = pf %>%
group_by(age) %>%
summarise(friend_count_mean=mean(friend_count),
friend_count_median=median(friend_count),
n=n()) %>%
arrange(age)
head(pf.fc_by_age)
ggplot(aes(age, friend_count), data=pf) +
geom_point(alpha=1/10,
position = position_jitter(h=0),
color='orange')+
geom_line(stat='summary', fun.y=mean) +
geom_line(stat='summary', fun.y=quantile,
fun.args=list(prob=.1),
linetype='dashed') +
geom_line(stat='summary', fun.y=quantile,
fun.args=list(prob=.9),
linetype='dashed') +
geom_line(stat='summary', fun.y=median,
color='blue') +
coord_cartesian(xlim=c(13,90))
cor(pf$friend_count, pf$age)
with( pf, cor.test(age, friend_count))
cor.test(pf.age, pf$friend_count)
cor.test(pf$age, pf$friend_count)
cor(pf$friend_count, pf$age)
## or
cor(pf$friend_count, pf$age)
with(pf, cor.test(age, friend_count))
ggplot(aes(likes_received, www_likes_received), data=pf) +
geom_point()
ggplot(aes(www_likes_received, likes_received), data=pf) +
geom_point()
ggplot(aes(www_likes_received, likes_received), data=pf) +
geom_point() +
scale_y_log10() +
scale_x_log10()
ggplot(aes(www_like_received, likes_received), data=pf) +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95))
ggplot(aes(www_likes_received, likes_received), data=pf) +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95))
ggplot(aes(www_likes_received, likes_received), data=pf) +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95))
ggplot(aes(www_likes_received, likes_received), data=pf) +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95))
ggplot(aes(www_likes_received, likes_received), data=pf) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95))
cor(pf$www_likes_received, pf$likes_received)
ggplot(aes(www_likes_received, likes_received), data=pf) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95)) +
geom_smooth(method='lm', color='red')
install.packages('alr3')
library(alr3)
data(Mitchell)
?Mitchell
load(Mitchell)
ggplot(aes(Temp, Month), data=Mitchell) +
geom_point()
ggplot(aes(Month, Temp), data=Mitchell) +
geom_point() +
scale_x_date()
ggplot(aes(Month, Temp), data=Mitchell) +
geom_point() #+
cor(Mitchell)
ggplot(aes(Month, Temp_, data=Mitchell)) +
geom_point() +
scale_x_discrete(breaks=seq(0,200,12))
ggplot(aes(Month, Temp_, data=Mitchell)) +
geom_point() +
scale_x_discrete(breaks=seq(0,200,12))
ggplot(aes(Month, Temp_, data=Mitchell)) +
geom_point() +
scale_x_discrete(breaks=seq(0,203,12))
data(Mitchell)
ggplot(aes(Month, Temp), data=Mitchell) +
geom_point() #+
scale_x_date()
ggplot(aes(Month, Temp_, data=Mitchell)) +
geom_point() +
scale_x_discrete(breaks=seq(0,203,12))
scale_x_discrete(breaks = seq(0,203,12))
ggplot(aes(Month, Temp_, data=Mitchell)) +
geom_point() +
scale_x_discrete(breaks = seq(0,203,12))
ggplot(aes(Month%%12, Temp_, data=Mitchell)) +
geom_point()# +
ggplot(aes(Month, Temp), data=Mitchell) +
geom_point() #+
ggplot(aes(Month%%12, Temp_, data=Mitchell)) +
geom_point()# +
ggplot(aes(Month%%12, Temp_, data=Mitchell) +
geom_point()# +
)
ggplot(aes(Month%%12, Temp), data=Mitchell) +
geom_point() +
scale_x_discrete(breaks = seq(0,203,12))
ggplot(aes(Month, Temp), data=Mitchell) +
geom_point() +
scale_x_discrete(breaks = seq(0,203,12))
ggplot(aes(age, friend_count_mean),
data=pf.fc_by_age) +
geom_line()
str(pf$age)
str(pf$dob_month)
str(pf$dob_year)
pf$age_with_months = 12*pf$age + 12-pf$dob_month
str(pf$age_with_months)
14*12
pf$age_with_months = 12*pf$age + (12-pf$dob_month)/12
str(pf$age_with_months)
pf$age_with_months = pf$age + (12-pf$dob_month)/12
str(pf$age_with_months)
pf.fc_by_age_months = pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean=mean(friend_count),
friend_count_median=median(friend_count),
n=n()) %>%
arrange(age)
pf.fc_by_age_months = pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean=mean(friend_count),
friend_count_median=median(friend_count),
n=n()) %>%
arrange(age_with_months)
head(pf.fc_by_age_months)
ggplot(aes(age_with_months, friend_count_mean),
data=pf.fc_by_age_months[pf.fc_by_age_months$age_with_months< 71]) +
ggplot(aes(age_with_months, friend_count_mean),
data=pf.fc_by_age_months[pf.fc_by_age_months$age_with_months< 71,]) +
geom_line()
ggplot(aes(age_with_months, friend_count_mean),
data=pf.fc_by_age_months[pf.fc_by_age_months$age_with_months< 71,]) +
geom_point()
ggplot(aes(age_with_months, friend_count_mean),
data=pf.fc_by_age_months[pf.fc_by_age_months$age_with_months< 71,]) +
geom_point()+
geom_line()
ggplot(aes(age_with_months, friend_count_mean),
data=pf.fc_by_age_months[pf.fc_by_age_months$age_with_months< 71,]) +
geom_point()+
geom_line(color='blue')
ggplot(aes(age_with_months, friend_count_mean),
data=pf.fc_by_age_months[pf.fc_by_age_months$age_with_months< 71,]) +
# geom_point()+
geom_line(color='blue')
library(gridExtra)
p1 = ggplot(aes(age, friend_count_mean),
data=pf.fc_by_age[pf.fc_by_age<71,]) +
geom_line()
p1 = ggplot(aes(age, friend_count_mean),
data=pf.fc_by_age[pf.fc_by_age<71,]) +
geom_line(color='orange')
p2 = ggplot(aes(age, friend_count_mean),
data=pf.fc_by_age_months[pf.fc_by_age_months<71,])+
geom_line(color='blue')
grid.arrange(p1,p2, ncol=1)
p1 = ggplot(aes(age, friend_count_mean),
data=pf.fc_by_age[pf.fc_by_age$age<71,]) +
geom_line(color='orange')
p2 = ggplot(aes(age, friend_count_mean),
data=pf.fc_by_age_months[pf.fc_by_age_months$age_with_months<71,])+
geom_line(color='blue')
grid.arrange(p1,p2, ncol=1)
p1 = ggplot(aes(age, friend_count_mean),
data=pf.fc_by_age[pf.fc_by_age$age<71,]) +
geom_line(color='orange')
p2 = ggplot(aes(age_with_months, friend_count_mean),
data=pf.fc_by_age_months[pf.fc_by_age_months$age_with_months<71,])+
geom_line(color='blue')
grid.arrange(p1,p2, ncol=1)
p3 = ggplot(aes(round(age/5)*5, friend_count),
data=pf[pf$age < 71,]) +
geom_line(stat='summary', fun.y=mean, color='red')
grid.arrange(p1,p2,p3, ncol=1)
p1+geom_smooth()
a = p1+geom_smooth()
b = p2+geom_smooth()
c = p3+geom_smooth()
grid.arrange(a,b,c,ncol(1))
grid.arrange(a,b,c, ncol(1))
grid.arrange(a,b, ncol(1))
p1+geom_smooth()
p2+geom_smooth()
p3+geom_smooth()
grid.arrange(a,b,c, ncol=1)
2+2
2-2
2-3
getwd()
food = read.csv('https://spreadsheets.google.com/pub?key=0ArfEDsV3bBwCdGlYVVpXX20tbU13STZyVG0yNkRrZnc&output=csv',
)
food = read.csv('https://spreadsheets.google.com/pub?key=0ArfEDsV3bBwCdGlYVVpXX20tbU13STZyVG0yNkRrZnc&output=csv',
)
View(food)
food = read.csv('https://spreadsheets.google.com/pub?key=0ArfEDsV3bBwCdGlYVVpXX20tbU13STZyVG0yNkRrZnc&output=csv',
header=TRUE, check.names = FALSE))
food = read.csv('https://spreadsheets.google.com/pub?key=0ArfEDsV3bBwCdGlYVVpXX20tbU13STZyVG0yNkRrZnc&output=csv',
header=TRUE, check.names = FALSE)
View(food)
library(tidyr)
library(dplyr)
food = tidyr::gather(food, 'Year',
'kcal', na.rm = T, 2:48)
View(food)
colnames(food) = c('country', 'year','kcal')
us = food[food$country=='United Stats',]
us = food[food$country=='United States',]
View(us)
library(ggplot2)
ggplot(aes(year, kcal), data=food) +
geom_line(color='red')
ggplot(aes(year, kcal), data=food) +
geom_point(color='red')
ggplot(aes(year, kcal), data=us) +
geom_point(color='red')
ggplot(aes(year, kcal), data=us) +
geom_point(color='red') +
geom_line(color='blue')
ggplot(aes(year, kcal), data=us) +
geom_point(color='red')
range(us$year)
ggplot(aes(year, kcal), data=us) +
geom_point(color='red') +
scale_y_discrete(breaks=seq(1961, 2007, 5))
ggplot(aes(year, kcal), data=us) +
geom_point(color='red') +
scale_x_discrete(breaks=seq(1961, 2007, 5))
ggplot(aes(year, kcal), data=us) +
geom_point(color='red') +
scale_x_discrete(breaks=seq(1961, 2007, 5)) +
geom_line(color='blue')
ggplot(aes(year, kcal), data=us) +
geom_line(color='blue')
ggplot(aes(year, kcal), data=us) +
geom_point(color='red') +
scale_x_discrete(breaks=seq(1961, 2007, 5)) +
geom_line(color='blue')
geom_abline(color='blue')
ggplot(aes(year, kcal), data=us) +
geom_point(color='red') +
scale_x_discrete(breaks=seq(1961, 2007, 5)) +
geom_abline(color='blue')
ggplot(aes(year, kcal), data=us) +
geom_point(color='red') +
scale_x_discrete(breaks=seq(1961, 2007, 5)) +
geom_smooth(color='blue')
min(food$kcal[food$year==2007])
min(food$country[food$year==2007])
food[where(min(food$kcal[food$year==2007]))]
food[min(food$kcal[food$year==2007])]
food[which(min(food$kcal[food$year==2007])),]
food[food$kcal==min(food$kcal[food$year==2007]),]
food[food$kcal==min(food$kcal[food$year==2007]),]$country
food$country[food$kcal==min(food$kcal[food$year==2007]),]
food[food$kcal==min(food$kcal[food$year==2007]),]
food[food$kcal==min(food$kcal[food$year==2007]),country]
food[food$kcal==min(food$kcal[food$year==2007]),]
congo = subset(food, country=='Congom Dem. Rep.')
congo = subset(food, food$country=='Congom Dem. Rep.')
congo = subset(food, food$country=='Congo Dem. Rep.')
congo = subset(food, food$country=='Congo, Dem. Rep.')
View(congo)
ggplot(aes(year, kcal), data=us) +
geom_point(color='red') +
scale_x_discrete(breaks=seq(1961, 2007, 5)) +
geom_smooth(method='lm', color='red')
ggplot(aes(year, kcal), data=us) +
geom_point(color='red') +
scale_x_discrete(breaks=seq(1961, 2007, 5)) +
geom_line(method='lm', color='red')
ggplot(aes(year, kcal), data=us) +
# geom_point(color='red') +
scale_x_discrete(breaks=seq(1961, 2007, 5)) +
geom_line(method='lm', color='red')
ggplot(aes(year, kcal), data=us) +
# geom_point(color='red') +
scale_x_discrete(breaks=seq(1961, 2007, 5)) +
geom_line(color='red')
qplot(year, kcal, data=us)
ggplot(aes(year, kcal), data=us) +
# geom_point(color='red') +
scale_x_continuous(breaks=seq(1961, 2007, 5)) +
geom_line(color='red')
ggplot(aes(year, kcal), data=us) +
# geom_point(color='red') +
scale_x_discrete(breaks=seq(1961, 2007, 5)) +
geom_line(color='red')
ggplot(aes(year, kcal), data=us) +
geom_point(color='red') +
scale_x_method='lm',(breaks=seq(1961, 2007, 5)) #+
ggplot(aes(year, kcal), data=us) +
geom_point(color='red') +
scale_x_discrete(breaks=seq(1961, 2007, 5))
qplot(year, kcal, data=us, geom)
qplot(year, kcal, data=congo)
install.packages('plotly')
library(plotly)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv')
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
plot_ly(df, z = GDP..BILLIONS., text = COUNTRY, locations = CODE, type = 'choropleth',
color = GDP..BILLIONS., colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g)
plot_ly(food, z = kcal, text = country, locations = country, type = 'choropleth',
color = GDP..BILLIONS., colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g)
plot_ly(food, z = kcal, text = country, locations = country, type = 'choropleth',
color = kcal., colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g)
?plot_ly
plot_ly(food, x=country, y = kcal, text = country, type = 'choropleth',
color = kcal., colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g)
plot_ly(data=food, x=country, y = kcal, text = country, type = 'choropleth',
color = kcal., colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g)
View(food)
plot_ly(data=food, x=country, y = food$kcal, text = country, type = 'choropleth',
color = kcal., colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(geo = g)
plot_ly(data=us, x=country, text = country, type = 'choropleth',
color = kcal., colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(geo = g)
plot_ly(data=fo, x=country, text = country, type = 'choropleth', colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(geo = g)
plot_ly(data=food, x=country, text = country, type = 'choropleth', colors = 'Blues',
marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(geo = g)
plot_ly(data=food, x=country, y=kcal, text = country, type = 'choropleth', colors = 'Blues',
marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(geo = g)
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
plot_ly(df, z = GDP..BILLIONS., text = COUNTRY, locations = CODE, type = 'choropleth',
color = GDP..BILLIONS., colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g)
plot_ly(food, z = kcal, text = country, locations = CODE, type = 'choropleth',
color = kcal, colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g)
plot_ly(food, z = kcal, text = country, locations = country, type = 'choropleth',
color = kcal, colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g)
plot_ly(food, z = kcal, text = country, locations = df$CODE, type = 'choropleth',
color = kcal, colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g)
plot_ly(food, z = kcal, text = df$COUNTRY, locations = df$CODE, type = 'choropleth',
color = kcal, colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g)
plot_ly(food[food$year==2007,], z = kcal, text = df$COUNTRY, locations = df$CODE, type = 'choropleth',
color = kcal, colors = 'Blues', marker = list(line = l),
colorbar = list(tickprefix = '$', title = 'GDP Billions US$')) %>%
layout(title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g)
str(df)
food$code = df$CODE
